// Code generated by MockGen. DO NOT EDIT.
// Source: workoutpal/src/internal/domain/service (interfaces: ExerciseService)

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"
	model "workoutpal/src/internal/model"

	gomock "github.com/golang/mock/gomock"
)

// MockExerciseService is a mock of ExerciseService interface.
type MockExerciseService struct {
	ctrl     *gomock.Controller
	recorder *MockExerciseServiceMockRecorder
}

// MockExerciseServiceMockRecorder is the mock recorder for MockExerciseService.
type MockExerciseServiceMockRecorder struct {
	mock *MockExerciseService
}

// NewMockExerciseService creates a new mock instance.
func NewMockExerciseService(ctrl *gomock.Controller) *MockExerciseService {
	mock := &MockExerciseService{ctrl: ctrl}
	mock.recorder = &MockExerciseServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExerciseService) EXPECT() *MockExerciseServiceMockRecorder {
	return m.recorder
}

// ReadAllExercises mocks base method.
func (m *MockExerciseService) ReadAllExercises() ([]*model.Exercise, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadAllExercises")
	ret0, _ := ret[0].([]*model.Exercise)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadAllExercises indicates an expected call of ReadAllExercises.
func (mr *MockExerciseServiceMockRecorder) ReadAllExercises() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadAllExercises", reflect.TypeOf((*MockExerciseService)(nil).ReadAllExercises))
}

// ReadExerciseByID mocks base method.
func (m *MockExerciseService) ReadExerciseByID(arg0 int64) (*model.Exercise, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadExerciseByID", arg0)
	ret0, _ := ret[0].(*model.Exercise)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadExerciseByID indicates an expected call of ReadExerciseByID.
func (mr *MockExerciseServiceMockRecorder) ReadExerciseByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadExerciseByID", reflect.TypeOf((*MockExerciseService)(nil).ReadExerciseByID), arg0)
}
