// Code generated by MockGen. DO NOT EDIT.
// Source: workoutpal/src/internal/domain/service (interfaces: GoalService)

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"
	model "workoutpal/src/internal/model"

	gomock "github.com/golang/mock/gomock"
)

// MockGoalService is a mock of GoalService interface.
type MockGoalService struct {
	ctrl     *gomock.Controller
	recorder *MockGoalServiceMockRecorder
}

// MockGoalServiceMockRecorder is the mock recorder for MockGoalService.
type MockGoalServiceMockRecorder struct {
	mock *MockGoalService
}

// NewMockGoalService creates a new mock instance.
func NewMockGoalService(ctrl *gomock.Controller) *MockGoalService {
	mock := &MockGoalService{ctrl: ctrl}
	mock.recorder = &MockGoalServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGoalService) EXPECT() *MockGoalServiceMockRecorder {
	return m.recorder
}

// CreateGoal mocks base method.
func (m *MockGoalService) CreateGoal(arg0 int64, arg1 model.CreateGoalRequest) (*model.Goal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGoal", arg0, arg1)
	ret0, _ := ret[0].(*model.Goal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateGoal indicates an expected call of CreateGoal.
func (mr *MockGoalServiceMockRecorder) CreateGoal(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGoal", reflect.TypeOf((*MockGoalService)(nil).CreateGoal), arg0, arg1)
}

// ReadUserGoals mocks base method.
func (m *MockGoalService) ReadUserGoals(arg0 int64) ([]*model.Goal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadUserGoals", arg0)
	ret0, _ := ret[0].([]*model.Goal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadUserGoals indicates an expected call of ReadUserGoals.
func (mr *MockGoalServiceMockRecorder) ReadUserGoals(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadUserGoals", reflect.TypeOf((*MockGoalService)(nil).ReadUserGoals), arg0)
}
